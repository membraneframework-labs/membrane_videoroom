name: Tag Build and Deploy
on:
  push:
    tags: 
      - "*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push tagged version
        id: docker_build_tag
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: VERSION= ${{ github.ref_name }}
          tags: membraneframework/demo_webrtc_videoroom_advanced:${{ github.ref_name }}

      - name: Build and push latest version 
        id: docker_build_latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: VERSION= ${{ github.ref_name }}
          tags: membraneframework/demo_webrtc_videoroom_advanced:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:  
      - uses: actions/checkout@v3

      - name: Deploy docker compose to a pre-configured server
        id: deploy
        uses: wshihadeh/docker-deployment-action@v2
        with:
          remote_docker_host: ${{ secrets.DEMO_HOST }}
          ssh_private_key: ${{ secrets.SSH_PRIV_KEY }}
          ssh_public_key: ${{ secrets.SSH_KNOWN_HOSTS}}
          deployment_mode: docker-compose
          stack_file_name: docker-compose.yml
          copy_stack_file: true
          pull_images_first: true
          args: up -d

