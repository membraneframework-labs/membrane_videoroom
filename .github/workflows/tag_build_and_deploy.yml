name: Tag Build and Deploy
on:
  push:
    tags: 
      - "*.*.*"

env: 
  VIRTUAL_HOST: videoroom.membrane.stream
  INTEGRATED_TURN_IP: 65.21.244.250
  TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push tagged version
        id: docker_build_tag
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: VERSION= ${{ github.ref_name }}
          tags: membraneframework/demo_webrtc_videoroom_advanced:${{ github.ref_name }}

      - name: Build and push latest version 
        id: docker_build_latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: VERSION= ${{ github.ref_name }}
          tags: membraneframework/demo_webrtc_videoroom_advanced:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Prepare .env file for the deployment
        id: variables_population
        env: 
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          GF_SECURITY_ADMIN_PASSWORD: ${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}
          GF_SECURITY_ADMIN_USER: ${{ secrets.GF_SECURITY_ADMIN_USER  }}
        run: |
          echo "VIRTUAL_HOST=$VIRTUAL_HOST 
          INTEGRATED_TURN_IP=$INTEGRATED_TURN_IP 
          TAG=$TAG 
          DB_USERNAME=$DB_USERNAME 
          DB_PASSWORD=$DB_PASSWORD
          GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD
          GF_SECURITY_ADMIN_USER=$GF_SECURITY_ADMIN_USER" > .env

      - name: Execute SSH commmands on remote server
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.DEMO_HOST }}
          privateKey: ${{ secrets.SSH_PRIV_KEY }}
          command: |
            rm -rf membrane_rtc_engine_timescaledb
            git clone https://github.com/membraneframework/membrane_rtc_engine_timescaledb.git 
            git --git-dir=./membrane_rtc_engine_timescaledb/.git --work-tree=./membrane_rtc_engine_timescaledb/ checkout metrics-visualisation 
  
      - name: Deploy docker compose to a pre-configured server
        id: deploy
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: ${{ secrets.DEMO_HOST }}
          ssh_private_key: ${{ secrets.SSH_PRIV_KEY }}
          ssh_public_key: ${{ secrets.SSH_KNOWN_HOSTS}}
          stack_file_name: docker-compose.yml
          args: -p production --env-file .env up -d --remove-orphans

